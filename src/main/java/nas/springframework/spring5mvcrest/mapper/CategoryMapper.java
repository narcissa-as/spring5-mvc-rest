package nas.springframework.spring5mvcrest.mapper;

import nas.springframework.spring5mvcrest.api.v1.model.CategoryDTO;
import nas.springframework.spring5mvcrest.domain.Category;
import org.mapstruct.Mapper;
import org.mapstruct.factory.Mappers;
@Mapper
public interface CategoryMapper {
    //by defining this interface as a Mapper (MapStruct), the implementation of this interface will be generated at
    // runtime (compile time) so the categoryToCategoryDTO gets the props of Category class that are generated by lombok and map
    // them to CategoryDTO prop (the body of the method will be generated automatically by MapStruct in the target -> generated-sources path)
    // as long as property names of the two classes are match the auto binding works perfectly fine, in case of difference in name
    // we need to specify the target and source prop like this example(@Mapping(source = "c_id", target= "id") )
    // Note: if we remove @Data annotation from CategoryDTO class the properties would not bind and only a raw instance of
    //CategoryDTO will be initiated in the generated source
    CategoryMapper INSTANCE = Mappers.getMapper(CategoryMapper.class);// a helper to pass the class in the interface
    // so the Mapper automatically generate the class and give an instance of it
    //since the name of source and target are the same we don't need this @Mapping anymore
    //@Mapping(source="name",target="")
    CategoryDTO categoryToCategoryDto(Category category);
}
//this is the code generated due to of use of Mapper interface that helps and generate some codes for converting automatically for us,
//the path that we can check the code is: application path/target/generated source
/*
@Generated(
    value = "org.mapstruct.ap.MappingProcessor",
    date = "2022-12-16T13:30:20+0330",
    comments = "version: 1.5.2.Final, compiler: javac, environment: Java 11.0.13 (Amazon.com Inc.)"
)
@Component
public class CategoryMapperImpl implements CategoryMapper {

    @Override
    public CategoryDTO categoryToCategoryDto(Category category) {
        if ( category == null ) {
            return null;
        }

        CategoryDTO categoryDTO = new CategoryDTO();

        categoryDTO.setId( category.getId() );
        categoryDTO.setName( category.getName() );

        return categoryDTO;
    }
}
*/